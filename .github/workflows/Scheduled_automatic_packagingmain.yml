name: Scheduled automatic packaging
on:
  repository_dispatch:
    types:
      - GitHub

env:
  IMAGE_NAMESPACE: ${{ vars.IMAGE_NAMESPACE }}
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

  DOMESTIC_BASE_NAME: ${{ vars.DOMESTIC_BASE_NAME }}
  DOMESTIC_NAMESPACE: ${{ vars.DOMESTIC_NAMESPACE }}
  DOMESTIC_DOCKER_USERNAME: ${{ secrets.DOMESTIC_DOCKER_USERNAME }}
  DOMESTIC_DOCKER_PASSWORD: ${{ secrets.DOMESTIC_DOCKER_PASSWORD }}

  VERSION: ${{ github.event.client_payload.version }}
  TRAVIS_PULL_REQUEST: false
  # UI env
  BUILD_RBD_APP_UI: false

jobs:
  build:
    name: ${{ matrix.rbdcomponent }}-${{ github.event.client_payload.version }}-${{ matrix.arch }}
    uses: ./.github/workflows/build_region.yml
    strategy:
      fail-fast: false
      matrix:
        rbdcomponent: [ rainbond-operator, api]
        arch: [ amd64, arm64 ]
        os: [ ubuntu-22.04, self-hosted ]
        repo: [ rainbond-operator, rainbond ]
        exclude:
          - os: ubuntu-22.04
            arch: arm64
          - os: self-hosted
            arch: amd64
          - rbdcomponent: [ rainbond-operator ]
            repo: rainbond
          - rbdcomponent: [ api ]
            repo: rainbond-operator
#        list all matrix
#       rainbond-operator-amd64-ubuntu-22.04-rainbond-operator
#       rainbond-operator-arm64-self-hosted-rainbond-operator
#       api-amd64-ubuntu-22.04-raibond
#       api-arm64-self-hosted-raibond

#       rainbond-operator-amd64-ubuntu-22.04-raibond
#       rainbond-operator-amd64-self-hosted-rainbond-operator
#       rainbond-operator-amd64-self-hosted-raibond
#       rainbond-operator-arm64-ubuntu-22.04-rainbond-operator
#       rainbond-operator-arm64-ubuntu-22.04-raibond
#
#       rainbond-operator-arm64-self-hosted-raibond
#       api-amd64-ubuntu-22.04-rainbond-operator
#       api-amd64-self-hosted-rainbond-operator
#       api-amd64-self-hosted-raibond
#       api-arm64-ubuntu-22.04-rainbond-operator
#       api-arm64-ubuntu-22.04-raibond
#       api-arm64-self-hosted-rainbond-operator

#        need matrix
#       rainbond-operator-amd64-ubuntu-22.04-rainbond-operator
#       rainbond-operator-arm64-self-hosted-rainbond-operator
#       api-amd64-ubuntu-22.04-raibond
#       api-arm64-self-hosted-raibond
#       Define exclusion rules and retain only the required matrices
#        exclude matrix


    with:
      branch: ${{ github.event.client_payload.branch }}
      clone_url: ${{ github.event.client_payload.clone_url }}
      repo: ${{ matrix.repo }}
      environment: ${{ vars.ENVIRONMENT }}
      rbdcomponent: ${{ matrix.rbdcomponent }}
      version: ${{ github.event.client_payload.version }}-${{ matrix.arch }}
      arch: ${{ matrix.arch }}
      os: ${{ matrix.os }}
    secrets: inherit

#  build-rainbond-operator-arm64:
#    uses: ./.github/workflows/build_region.yml
#    strategy:
#      fail-fast: false
#      matrix:
#        arch: [ arm64 ]
#    with:
#      branch: ${{ github.event.client_payload.branch }}
#      clone_url: ${{ github.event.client_payload.clone_url }}
#      repo: rainbond-operator
#      environment: ${{ vars.ENVIRONMENT }}
#      rbdcomponent: rainbond-operator
#      version: ${{ github.event.client_payload.version }}-arm64
#      arch: arm64
#    secrets: inherit

#  build-rainbond-region:
#    uses: ./.github/workflows/build_region.yml
#    strategy:
#      fail-fast: false
#      matrix:
#        target: [ api ]
##        target: [ api, chaos, gateway, monitor, mq, webcli, worker, eventlog, init-probe mesh-data-panel, grctl, node, resource-proxy, shell ]
#        arch: [ amd64, arm64 ]
#    with:
#      branch: ${{ github.event.client_payload.branch }}
#      clone_url: ${{ github.event.client_payload.clone_url }}
#      repo: rainbond
#      environment: ${{ vars.ENVIRONMENT }}
#      rbdcomponent: ${{ matrix.target }}
#      version: ${{ github.event.client_payload.version }}-${{ matrix.arch }}
#      arch: ${{ matrix.arch }}
#    secrets: inherit
#
#  push-multi-manifest:
#    needs: [ build-rainbond-operator, build-rainbond-region ]
#    runs-on: ubuntu-22.04
#    environment: ${{ vars.ENVIRONMENT }}
#    strategy:
#      fail-fast: false
#      matrix:
#        component: [ rainbond-operator, rbd-api ]
#    steps:
#      - name: push-multi-manifest
#        run: |
#          docker_manifest="$IMAGE_NAMESPACE/${{ matrix.component }}:${{ github.event.client_payload.version }}"
#          docker_amd_image="$docker_manifest-amd64"
#          docker_arm_image="$docker_manifest-arm64"
#          ali_manifest="$DOMESTIC_BASE_NAME/$DOMESTIC_NAMESPACE/${{ matrix.component }}:${{ github.event.client_payload.version }}"
#          ali_amd_image="$ali_manifest-amd64"
#          ali_arm_image="$ali_manifest-arm64"
#          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
#          docker login -u $DOMESTIC_DOCKER_USERNAME -p $DOMESTIC_DOCKER_PASSWORD ${DOMESTIC_BASE_NAME}
#          docker pull $docker_amd_image
#          docker pull $docker_arm_image
#          docker tag $docker_amd_image $ali_amd_image
#          docker tag $docker_arm_image $ali_arm_image
#          docker manifest create $docker_manifest $docker_amd_image $docker_arm_image
#          docker manifest create $ali_manifest $ali_amd_image $ali_arm_image
#          docker manifest push $docker_manifest
#          docker manifest push $ali_manifest

#  build-rainbond-operator:
#    uses: yangkaa/rainbond/.github/workflows/build_region.yml@main
#    with:
#      branch: ${{ github.event.client_payload.branch }}
#      clone_url: ${{ github.event.client_payload.clone_url }}
#      repo: rainbond-operator
#      environment: ${{ vars.ENVIRONMENT }}
#      rbdcomponent: rainbond-operator
#      version: ${{ github.event.client_payload.version }}
#    secrets: inherit

#  build-ui:
#    runs-on: ubuntu-22.04
#    steps:
#      - name: Build the Docker image
#        run: |
#          if [ ${{ github.event.action }} == 'GitHub' ];then
#            git clone -b ${{ github.event.client_payload.branch }} ${{ github.event.client_payload.clone_url }}/rainbond-ui.git
#          else
#            git clone -b ${{ github.event.client_payload.branch }} ${{ github.event.client_payload.clone_url }}/rainbond-ui-cloud.git
#          fi
#          cd rainbond-ui
#          chmod +x ./build.sh
#          ./build.sh


#  build-rainbond-allinone:
#    needs: build-ui
#    runs-on: ubuntu-22.04
#    environment: ${{ vars.ENVIRONMENT }}
#    steps:
#      - name: Set up Python 3.6
#        uses: actions/setup-python@v2
#        with:
#          python-version: 3.6
#
#      - name: Install dependencies
#        run: |
#          python -m pip install --upgrade pip
#          pip install flake8 yapf==0.26.0
#
#      - name: Pull code and Build allinone image
#        env:
#          ADAPTOR_BRANCH: ${{ vars.ADAPTOR_BRANCH}}
#        run: |
#          git clone -b ${{ github.event.client_payload.branch }} ${{ github.event.client_payload.clone_url }}/rainbond-console.git
#          cd rainbond-console && chmod +x  ./release.sh
#          ./release.sh allinone

#  build-rainbond-region-chaos:
#    runs-on: ubuntu-22.04
#    environment: ${{ vars.ENVIRONMENT }}
#    steps:
#      - name: Setup Go environment
#        uses: actions/setup-go@v2.1.3
#        with:
#          # The Go version to download (if necessary) and use. Supports semver spec and ranges.
#          go-version: 1.18
#
#      - name: Pull code and Build the Docker image
#        env:
#          DISABLE_GOPROXY: true
#        run: |
#          if [ ${{ github.event.action }} == 'GitHub' ];then
#            git clone -b ${{ github.event.client_payload.branch }} ${{ github.event.client_payload.clone_url }}/rainbond.git
#          else
#            git clone -b ${{ github.event.client_payload.branch }} ${{ github.event.client_payload.clone_url }}/rainbond.git
#          fi
#          cd rainbond
#          chmod +x ./release.sh
#          ./release.sh chaos push
#
#  build-operator:
#    runs-on: ubuntu-22.04
#    environment: ${{ vars.ENVIRONMENT }}
#    steps:
#      - name: list
#        run: env
#
#      - name: Setup Go environment
#        uses: actions/setup-go@v2.1.3
#        with:
#          # The Go version to download (if necessary) and use. Supports semver spec and ranges.
#          go-version: 1.18
#
#      - name: Build and push
#        run: |
#          git clone -b ${{ vars.OPERATOR_BRANCH }} ${{ github.event.client_payload.clone_url }}/rainbond-operator.git
#          cd rainbond-operator
#          chmod +x ./release.sh
#          ./release.sh

#  build-dind:
#    needs: [build-ui,build-rainbond-region,build-operator]
#    runs-on: ubuntu-22.04
#    environment: ${{ vars.ENVIRONMENT }}
#    if: ${{ github.event.action }} == 'GitHub'
#    steps:
#      - name: Set up Python 3.6
#        uses: actions/setup-python@v2
#        with:
#          python-version: 3.6
#
#      - name: Install dependencies
#        run: |
#          python -m pip install --upgrade pip
#          pip install flake8 yapf==0.26.0
#      - name: Pack offline packages
#        env:
#          RBD_VER: ${{ github.event.client_payload.version }}
#        run: |
#          git clone -b ${{ github.event.client_payload.branch }} ${{ github.event.client_payload.clone_url }}/rainbond-console.git
#          cd rainbond-console
#          chmod +x ./release.sh
#      - name: Build the Docker image
#        env:
#          BUILD_IMAGE_NAMESPACE: ${{ vars.BUILD_IMAGE_NAMESPACE }}
#          OPERATOR_BRANCH: ${{ vars.OPERATOR_BRANCH }}
#          ADAPTOR_BRANCH: ${{ vars.ADAPTOR_BRANCH }}
#        run: |
#          cd rainbond-console
#          ./release.sh dind
