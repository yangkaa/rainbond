name: Build Region
run-name: ${{ inputs.rbdcomponent }}(${{ inputs.arch }})-${{ inputs.version }}

on:
  workflow_call:
    inputs:
      branch:
        required: true
        type: string
      clone_url:
        required: true
        type: string
      repo:
        required: true
        type: string
      environment:
        required: true
        type: string
      rbdcomponent:
        required: true
        type: string
      version:
        required: true
        type: string
      arch:
        required: true
        type: string
      os:
        required: true
        type: string

env:
  IMAGE_NAMESPACE: ${{ vars.IMAGE_NAMESPACE }}
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

  DOMESTIC_BASE_NAME: ${{ vars.DOMESTIC_BASE_NAME }}
  DOMESTIC_NAMESPACE: ${{ vars.DOMESTIC_NAMESPACE }}
  DOMESTIC_DOCKER_USERNAME: ${{ secrets.DOMESTIC_DOCKER_USERNAME }}
  DOMESTIC_DOCKER_PASSWORD: ${{ secrets.DOMESTIC_DOCKER_PASSWORD }}

  VERSION: ${{ inputs.version }}
  ARCH: ${{ inputs.arch }}

jobs:
  build:
    name: build-${{ inputs.version }}
    runs-on: ${{ inputs.os }}
    environment: ${{ inputs.environment }}
    steps:
      - name: Print Operation environment
        run: |
          arch
          echo "input arch: ${{ inputs.arch }}"
          env
          echo "clone_url: git clone -b ${{ inputs.branch }} ${{ inputs.clone_url }}/${{ inputs.repo }}.git"
          echo "repo: ${{ inputs.repo }}"
          echo "rbdcomponent: ${{ inputs.rbdcomponent }}"
          echo "version: ${{ inputs.version }}"
          echo "arch: ${{ inputs.arch }}"
          echo "os: ${{ inputs.os }}"
      - name: Setup Go environment
        uses: actions/setup-go@v2.1.3
        with:
          # The Go version to download (if necessary) and use. Supports semver spec and ranges.
          go-version: 1.18
      - name: "Pull code and Build the Docker image"
        env:
          DISABLE_GOPROXY: true
          BUILD_GOARCH: ${{ inputs.arch }}
        run: |
          git clone -b ${{ inputs.branch }} ${{ inputs.clone_url }}/${{ inputs.repo }}.git
          cd ${{ inputs.repo }} && chmod +x ./release.sh
          ./release.sh ${{ inputs.rbdcomponent }} push
